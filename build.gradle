// ================
// Gradle configuration

plugins {
	id 'java-library'
	id 'maven-publish'
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'com.jfrog.bintray' version '1.8.4'

	// https://github.com/palantir/gradle-git-version
	id 'com.palantir.git-version' version '0.12.2'

	// code quality plugins
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
	id 'com.github.spotbugs' version '3.0.0'
	id 'de.thetaphi.forbiddenapis' version '2.7'
	id 'com.diffplug.gradle.spotless' version '3.26.1'
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}

defaultTasks 'clean', 'build'

// ================
// Project metadata configuration

group = "jp.xet.springframework.data.mirage"
version = gitVersion()
ext.artifactId = "spring-data-mirage"

// ================
// Build configuration

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

javadoc {
	failOnError = false
}

apply plugin: 'io.spring.dependency-management'

repositories {
	jcenter()
	mavenCentral()
	maven { url 'http://dl.bintray.com/polycreo/maven' }
	maven { url 'https://jitpack.io' }
}

configurations {
	testCompile.extendsFrom compileOnly
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

dependencies {
	api 'com.miragesql:miragesql:2.1.0'
	api 'com.miragesql:miragesql-integration:2.1.0'
	api 'org.polycreo:polycreo-repositories:1.0.0-rc20'
	api 'org.polycreo:polycreo-chunkrequests:1.0.0-rc5'
	implementation 'org.polycreo:polycreo-id:1.0.0-rc1'

	implementation 'org.slf4j:slf4j-api'
	implementation 'com.google.guava:guava:24.1-jre'
	implementation 'org.springframework.data:spring-data-commons'
	compileOnly 'org.springframework:spring-context'
	compileOnly 'org.springframework:spring-jdbc'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'ch.qos.logback:logback-classic'
	testImplementation 'org.polycreo:polycreo-chunks:1.0.0-rc17'

	pmd 'net.sourceforge.pmd:pmd-java:6.16.0'
	pmd 'org.ow2.asm:asm:7.1'
}

wrapper {
	gradleVersion = '5.2.1'
	distributionType = Wrapper.DistributionType.ALL
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

// ================
// Lint / Test configuration

apply from: "${rootProject.projectDir}/config/checkstyle.gradle"
apply from: "${rootProject.projectDir}/config/spotbugs.gradle"
apply from: "${rootProject.projectDir}/config/pmd.gradle"
apply from: "${rootProject.projectDir}/config/jacoco.gradle"
apply from: "${rootProject.projectDir}/config/forbiddenapis.gradle"
apply from: "${rootProject.projectDir}/config/spotless.gradle"


tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		html.enabled = true
		xml.enabled = false
	}
}

// ================
// Deploy configuration

apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/bintray.gradle"
