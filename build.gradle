// -*- coding: utf-8; mode: groovy -*-

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessPluginVersion"
		classpath "de.thetaphi:forbiddenapis:2.6"
		classpath "de.aaschmid:gradle-cpd-plugin:1.2"
		classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
	}
}

plugins {
	id 'java-library'
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.4"
	id "pmd"
}

// basic plugins
apply plugin: 'io.spring.dependency-management'

// code quality plugins
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"
apply plugin: "cpd"
apply plugin: "jacoco"
apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "com.diffplug.gradle.spotless"

// code quality configuration
apply from: "${rootProject.projectDir}/config/checkstyle.gradle"
apply from: "${rootProject.projectDir}/config/spotbugs.gradle"
apply from: "${rootProject.projectDir}/config/pmd.gradle"
apply from: "${rootProject.projectDir}/config/cpd.gradle"
apply from: "${rootProject.projectDir}/config/jacoco.gradle"
apply from: "${rootProject.projectDir}/config/forbiddenapis.gradle"
apply from: "${rootProject.projectDir}/config/spotless.gradle"

// custom configuration
apply from: "${rootProject.projectDir}/gradle/version.gradle"
apply from: "${rootProject.projectDir}/gradle/resolveDependencies.gradle"
apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/bintray.gradle"

group = "jp.xet.springframework.data.mirage"
ext.artifactId = "spring-data-mirage"

defaultTasks "clean", "build"

wrapper {
	gradleVersion = '5.2.1'
	distributionType = Wrapper.DistributionType.ALL
}

// compiler
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

javadoc {
	failOnError = false
}

// ======== libraries ========
repositories {
	jcenter()
	mavenCentral()
	maven { url 'http://dl.bintray.com/ws2ten1/maven-release' }
}

dependencies {
	api "com.miragesql:miragesql:$mirageVersion"
	api "com.miragesql:miragesql-integration:$mirageVersion"
	api "org.ws2ten1:ws2ten1-repositories:1.0.0-rc10"
	api "org.ws2ten1:ws2ten1-chunks:1.0.0-rc9"
	implementation "org.slf4j:slf4j-api"
	implementation "com.google.guava:guava:$guavaVersion"
	implementation "org.springframework:spring-context"
	implementation "org.springframework:spring-jdbc"

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "com.h2database:h2"
	testImplementation "ch.qos.logback:logback-classic"
}


configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.name == "commons-logging") {
			// prefer "jcl-over-slf4j" over "commons-logging":
			details.useTarget "org.slf4j:jcl-over-slf4j:$slf4jVersion"
		}
		if (details.requested.name == "log4j") {
			// prefer "log4j-over-slf4j" over "log4j":
			details.useTarget "org.slf4j:log4j-over-slf4j:$slf4jVersion"
		}
	}
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = false
		}
	}
}
